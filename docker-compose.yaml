services:
  db:
    image: postgres:16
    container_name: postgres_girumed
    restart: always
    env_file:
      - .env  # Используем переменную окружения для выбора файла .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: Europe/Moscow
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
#    command: >
#      sh -c "
#        docker-entrypoint.sh postgres &
#        until pg_isready -U ${DB_USER}; do sleep 1; done;
#        psql -U ${DB_USER} -d ${DB_NAME} -c 'CREATE DATABASE ${DB_TEST};'
#        wait"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - girumed_net

  web:
      image: boristhebladeglebov/girumed-app:latest
#      build:
#        context: .
#        dockerfile: Dockerfile
#      container_name: fastapi_girumed
      env_file:
        - .env
      ports:
        - "8000:8000"
      depends_on:
        db:
          condition: service_healthy
      networks:
        - girumed_net
      restart: always
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 256M
          reservations:
            memory: 128M

volumes:
  pg_data:
    name: girumed_db

networks:
  girumed_net:
    name: girumed_net
#    external: true
